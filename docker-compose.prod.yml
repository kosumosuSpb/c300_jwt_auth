version: '3.4'

services:
  redis:
    container_name: redis
    hostname: redis
    image: redis:latest
#    ports:
#      - "6379:6379"
    networks:
      - c300_auth

  auth_service:
    container_name: auth_service
    build:
      context: .
      dockerfile: Dockerfile
    image: auth_service
#    command: sh -c "/wait && python manage.py makemigrations && python manage.py migrate && gunicorn --env DJANGO_SETTINGS_MODULE=config.settings config.wsgi -b :8000 --reload"
    command: sh -c "/wait && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
#      - ./logs:/app/logs
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      WAIT_HOSTS: postgres:5432
    depends_on:
      - postgres
    networks:
      - c300_auth

  celery:
    container_name: celery
    image: auth_service
    command: sh -c "celery -A config.celery_app worker --loglevel=info"
    env_file:
      - .env
    volumes:
      - .:/app
    depends_on:
      - redis
    networks:
      - c300_auth

  celery-beat:
    container_name: celery-beat
    image: auth_service
    command: sh -c "celery -A config.celery_app beat --loglevel=info -s ./service_data/celerybeat-schedule"
    env_file:
      - .env
    volumes:
      - .:/app
    depends_on:
      - redis
    networks:
      - c300_auth

  faust:
    container_name: faust
    image: auth_service
    command: sh -c "/wait && faust --datadir ./service_data/faust/ -A config.faust_app:app worker -l info --without-web"
    env_file:
      - .env
    environment:
      WAIT_HOSTS: postgres:5432, kafka:9092
    volumes:
      - .:/app
    depends_on:
      - kafka
      - postgres
    networks:
      - c300_auth

#  nginx:
#      container_name: nginx
#      restart: unless-stopped
#      image: nginx:1.24
#      ports:
#        - 80:80
#      volumes:
#        - ./nginx/nginx.conf:/etc/nginx/nginx.conf
#        - ./static:/app/static
#      env_file:
#        - .env
#      links:
#        - app
#      depends_on:
#        - app
#      networks:
#        - c300_auth


networks:
  c300_auth:
    driver: bridge