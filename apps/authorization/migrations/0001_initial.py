# Generated by Django 4.2.6 on 2023-10-06 10:30

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('email', models.EmailField(max_length=100, unique=True, verbose_name='Пользовательская электронная почта')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Дата регистрации')),
                ('phones', models.JSONField(blank=True, null=True, verbose_name='Список телефонных номеров')),
                ('is_admin', models.BooleanField(default=False)),
                ('activation_code', models.CharField(blank=True, max_length=100, null=True, verbose_name='Код активации')),
                ('number', models.CharField(blank=True, max_length=13, null=True, verbose_name='Номер лицевого счёта')),
                ('comment', models.CharField(blank=True, max_length=255, null=True, verbose_name='Комментарий к пользователю')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='')),
                ('inn', models.CharField(blank=True, max_length=12, null=True, verbose_name='ИНН')),
                ('get_access_date', models.DateTimeField(blank=True, null=True)),
                ('old_numbers', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=13), blank=True, null=True, size=None)),
                ('is_deleted', models.BooleanField(default=False)),
                ('additional_email', models.EmailField(blank=True, max_length=100, null=True, unique=True, verbose_name='Дополнительная пользовательская электронная почта')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='CompanyProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('worker', 'Worker'), ('tenant', 'Tenant'), ('company', 'Company')], max_length=7)),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название организации')),
                ('bank_details', models.JSONField(blank=True, null=True, verbose_name='Список банковских реквизитов')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Юридический адрес компании')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='company_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CustomPermissionModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('create', 'CREATE'), ('read', 'READ'), ('update', 'UPDATE'), ('delete', 'DELETE')], max_length=6)),
                ('name', models.CharField(max_length=150)),
                ('desc', models.CharField(blank=True, max_length=255, null=True)),
                ('companies', models.ManyToManyField(related_name='permissions', to='authorization.companyprofile')),
            ],
            options={
                'db_table': 'authorization_permissions',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='departments', to='authorization.companyprofile')),
            ],
        ),
        migrations.CreateModel(
            name='WorkerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('worker', 'Worker'), ('tenant', 'Tenant'), ('company', 'Company')], max_length=7)),
                ('first_name', models.CharField(max_length=50, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=50, verbose_name='Фамилия')),
                ('surname', models.CharField(default='', max_length=50, null=True, verbose_name='Отчество')),
                ('birth_date', models.DateTimeField(verbose_name='Дата рождения')),
                ('sex', models.CharField(choices=[('male', 'Мужской'), ('female', 'Женский')], max_length=10, verbose_name='Пол')),
                ('citizenship', models.CharField(blank=True, max_length=50, null=True, verbose_name='Гражданство')),
                ('military', models.CharField(blank=True, max_length=255, null=True, verbose_name='Воинская обязанность')),
                ('place_birth', models.CharField(blank=True, max_length=255, null=True, verbose_name='Место рождения')),
                ('position', models.CharField(max_length=75, null=True, verbose_name='Должность')),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='workers', to='authorization.department', verbose_name='Отдел в компании, в которой работает сотрудник')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='worker_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TenantProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('worker', 'Worker'), ('tenant', 'Tenant'), ('company', 'Company')], max_length=7)),
                ('first_name', models.CharField(max_length=50, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=50, verbose_name='Фамилия')),
                ('surname', models.CharField(default='', max_length=50, null=True, verbose_name='Отчество')),
                ('birth_date', models.DateTimeField(verbose_name='Дата рождения')),
                ('sex', models.CharField(choices=[('male', 'Мужской'), ('female', 'Женский')], max_length=10, verbose_name='Пол')),
                ('citizenship', models.CharField(blank=True, max_length=50, null=True, verbose_name='Гражданство')),
                ('military', models.CharField(blank=True, max_length=255, null=True, verbose_name='Воинская обязанность')),
                ('place_birth', models.CharField(blank=True, max_length=255, null=True, verbose_name='Место рождения')),
                ('rooms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=11), blank=True, null=True, size=None)),
                ('snils', models.CharField(blank=True, max_length=14, null=True)),
                ('gis_uid', models.CharField(blank=True, max_length=10, null=True, verbose_name='Единый лицевой счет')),
                ('hcs_uid', models.CharField(blank=True, max_length=10, null=True, verbose_name='Идентификатор ЖКУ')),
                ('area', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tenants', to='authorization.area')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='tenant_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PermissionGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('desc', models.CharField(blank=True, max_length=255, null=True)),
                ('permissions', models.ManyToManyField(related_name='permissions_groups', to='authorization.custompermissionmodel')),
            ],
        ),
        migrations.CreateModel(
            name='OwnerArea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('part', models.FloatField(default=1.0, verbose_name='Доля владения помещением')),
                ('area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owners', to='authorization.area')),
                ('company_owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='owner_areas', to='authorization.companyprofile')),
                ('tenant_owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='owner_areas', to='authorization.tenantprofile')),
            ],
        ),
        migrations.CreateModel(
            name='HouseGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('provider', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='house_groups', to='authorization.companyprofile')),
            ],
        ),
        migrations.CreateModel(
            name='House',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zip_code', models.CharField(blank=True, max_length=6, null=True)),
                ('city', models.CharField(max_length=255)),
                ('street', models.CharField(max_length=255)),
                ('number', models.CharField(max_length=10)),
                ('letter', models.CharField(max_length=5)),
                ('house_group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='houses', to='authorization.housegroup')),
            ],
        ),
        migrations.AddField(
            model_name='custompermissionmodel',
            name='tenants',
            field=models.ManyToManyField(related_name='permissions', to='authorization.tenantprofile'),
        ),
        migrations.AddField(
            model_name='custompermissionmodel',
            name='workers',
            field=models.ManyToManyField(related_name='permissions', to='authorization.workerprofile'),
        ),
        migrations.AddField(
            model_name='area',
            name='house',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='areas', to='authorization.house'),
        ),
        migrations.AlterUniqueTogether(
            name='custompermissionmodel',
            unique_together={('type', 'name')},
        ),
    ]
